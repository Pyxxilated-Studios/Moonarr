name: Release

on:
  push:
    branches: ["master"]
    tags: ["v*"]
    paths-ignore:
      - ".github/**"
      - "*.md"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        file: [ 'Dockerfile.ui', 'Dockerfile.api', 'Dockerfile.omni' ]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get name
        run: echo "NAME=$(echo '${{ matrix.file }}' | sed 's/Dockerfile.//g')" >> $GITHUB_OUTPUT
        id: name

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ steps.name.outputs.NAME }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags') }}
            type=raw,value=develop

      - name: Build and push Docker Image
        uses: docker/build-push-action@v6.5.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{ matrix.file }}
